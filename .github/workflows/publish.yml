name: Publish

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: telegram-cli-linux-amd64
            asset_name: telegram-cli-linux-amd64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: telegram-cli-windows-amd64
            asset_name: telegram-cli-windows-amd64.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Build application
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Package artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.asset_name }} telegram-cli
          cd ../../..

      - name: Package artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.asset_name }} telegram-cli.exe
          cd ../../..
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.asset_name }}

  release-and-publish:
    name: Release and Publish
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Attach artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*

      - name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}